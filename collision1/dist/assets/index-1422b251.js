var I=Object.defineProperty;var R=(o,t,e)=>t in o?I(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var g=(o,t,e)=>(R(o,typeof t!="symbol"?t+"":t,e),e),L=(o,t,e)=>{if(!t.has(o))throw TypeError("Cannot "+e)};var p=(o,t,e)=>(L(o,t,"read from private field"),e?e.call(o):t.get(o)),X=(o,t,e)=>{if(t.has(o))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(o):t.set(o,e)},E=(o,t,e,i)=>(L(o,t,"write to private field"),i?i.call(o,e):t.set(o,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function e(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(r){if(r.ep)return;r.ep=!0;const n=e(r);fetch(r.href,n)}})();const b=Math.PI,N=b*2;var M,m;class V{constructor({element:t,height:e,width:i,posX:r,posY:n,bgColor:s}){X(this,M,void 0);X(this,m,void 0);E(this,M,{element:t,height:e,width:i,posX:r,posY:n,bgColor:s});const c=document.createElement("canvas");c.height=e,c.width=i,t.appendChild(c),E(this,m,c),this.clear()}get height(){return p(this,m).height}get width(){return p(this,m).width}get ctx(){return p(this,m).getContext("2d")}clear(){const t=this.ctx,{posX:e,posY:i,width:r,height:n,bgColor:s}=p(this,M);t.fillStyle=s,t.fillRect(e,i,r,n)}renderCircle({x:t,y:e,r:i,color:r}){const n=this.ctx;n.beginPath(),n.arc(t,e,i,0,N),n.fillStyle=r,n.fill()}}M=new WeakMap,m=new WeakMap;const $=Math.PI,A=Math.PI*2;class G{constructor({x:t,y:e,r:i,v:r,ang:n,color:s}){g(this,"x");g(this,"y");g(this,"r");g(this,"v");g(this,"ang");g(this,"color");g(this,"isCollision",t=>{const{x:e,y:i,r}=this;return(e-t.x)**2+(i-t.y)**2<=(r+t.r)**2});this.x=t,this.y=e,this.r=i,this.v=r,this.ang=n,this.color=s}get info(){const{x:t,y:e,r:i,color:r}=this;return{x:t,y:e,r:i,color:r}}reflectXAxis(){this.ang=$-this.ang}reflectYAxis(){this.ang=A-this.ang}getPositionInfo(){const{x:t,y:e,r:i}=this;return{leftX:t-i,rightX:t+i,lowY:e-i,highY:e+i}}getNextPositionInfo(){const{ang:t,x:e,y:i,v:r,r:n}=this,s=e+r*Math.sin(t),c=i+r*Math.cos(t);return{leftX:s-n,rightX:s+n,lowY:c-n,highY:c+n}}move(){const{x:t,y:e,v:i,ang:r}=this,n=t+i*Math.sin(r),s=e+i*Math.cos(r);this.x=n,this.y=s}}class O{constructor(t){g(this,"circleList");g(this,"config");g(this,"gridMap");this.config=t,this.circleList=[],this.gridMap=new Map,this.initCirclePlace()}getCircleInfoList(){return this.circleList}initCirclePlace(){const{circleCount:t,gridValue:e}=this.config;let i=[];t:for(let r=0;r<t;){const{x:n,y:s,v:c,ang:a,color:d,r:f}=this.generateRandomCircle(),x=(n-f)/e|0,u=(n+f)/e|0,l=new G({x:n,y:s,r:f,v:c,ang:a,color:d});for(let h=x;h<=u;h++){if(!i[h]){i[h]=[l];continue}if(i[h].some(l.isCollision))continue t;i[h].push(l)}r++}return this.circleList=i.flat()}generateRandomCircle(){const{width:t,height:e,vVariable:i,vMin:r,maxColor:n,radiusMax:s,radiusMin:c}=this.config,a=(Math.random()*(s-c+1)|0)+c,d=(Math.random()*(t-a-a)|0)+a,f=(Math.random()*(e-a-a)|0)+a,x=Math.random()*i+r|0,u=Math.random()*6,l=`#${(Math.random()*n|0).toString(16)}`;return{x:d,y:f,v:x,ang:u,color:l,r:a}}moveCircles(){this.circleList.forEach(t=>{const e=t.getNextPositionInfo(),i=this.checkNextPosition(e,t);if(i==="x-axis")return t.reflectXAxis();if(i==="y-axis")return t.reflectYAxis()}),this.gridMap.clear(),this.circleList.forEach(t=>{t.move(),this.setGridMap(t)})}setGridMap(t){const e=this.gridMap,{leftX:i,rightX:r,lowY:n,highY:s}=t.getPositionInfo(),c=this.config.gridValue,a=i/c|0,d=r/c|0,f=n/c|0,x=s/c|0;for(let u=a;u<=d;u++)for(let l=f;l<=x;l++){const h=`${u}-${l}`;e.has(h)?e.get(h).push(t):e.set(h,[t])}}checkNextPosition({leftX:t,rightX:e,lowY:i,highY:r},n){const{height:s,width:c,gridValue:a}=this.config;if(t<=0||e>=c)return"y-axis";if(i<=0||r>=s)return"x-axis";const d=this.gridMap,f=t/a|0,x=e/a|0,u=i/a|0,l=r/a|0;for(let h=f;h<=x;h++)for(let v=u;v<=l;v++){const y=d.get(`${h}-${v}`);if(y){for(let C=0;C<y.length;C++)if(y[C]!==n&&n.isCollision(y[C]))return"y-axis"}}return"none"}}const F=16777215,P=new V({element:document.getElementById("container"),height:1e3,width:2e3,posX:0,posY:0,bgColor:"#eee"}),w=new O({circleCount:7e3,width:2e3,height:1e3,vVariable:5,vMin:1,maxColor:F,radiusMin:1,radiusMax:3,gridValue:200});function Y(){P.clear(),w.moveCircles(),w.circleList.forEach(o=>P.renderCircle(o.info)),requestAnimationFrame(Y)}Y();
